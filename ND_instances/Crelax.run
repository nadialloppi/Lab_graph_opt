
printf "********************************* Istance 1 *********************************\n">CR_analysis.txt;

model parameterDefinition.mod;
data demand1.dat;
data topology1.dat;

param Tic_original;
param Toc_original;
param Tic_CR;
param Toc_CR;
param T_original;
param T_CR;

param OPT default 0; 
param CR default 0;

option solver cplex;
option cplex_options 'mipgap 0';

problem Original: x, l, capacity, maxArcs, flowBalance, varConsistency;
problem ContRelaxation: x_c, l_c, capacity_c, maxArcs_c, flowBalance_c, varConsistency_c;

printf "---------------------------- Original ---------------------------\n">CR_analysis.txt;

let Tic_original := _ampl_elapsed_time;

solve Original;

let Toc_original := _ampl_elapsed_time;

let OPT:= l; display l;
let T_original := Toc_original - Tic_original;

printf"Optimal value: 		%d ", l >CR_analysis.txt;
printf"				Required time:		%f \n", T_original  >CR_analysis.txt;
printf "------------------------------- CR ------------------------------\n">CR_analysis.txt;

let Tic_CR := _ampl_elapsed_time;

solve ContRelaxation;

let Toc_CR := _ampl_elapsed_time;
let CR := l_c; display l_c;
let T_CR := Toc_CR-Tic_CR;

printf"Optimal value: 		%f ", l_c >CR_analysis.txt;
printf"				Required time: 		%f \n",T_CR >CR_analysis.txt;
printf "\n" > CR_analysis.txt;

printf "********************************* Istance 2 *********************************\n">CR_analysis.txt;
reset data;
#model parameterDefinition.mod;
data demand2.dat;
data topology2.dat;


printf "---------------------------- Original ---------------------------\n">CR_analysis.txt;


let Tic_original := _ampl_elapsed_time;

solve Original;

let Toc_original := _ampl_elapsed_time;

let OPT:= l; display l;
let T_original := Toc_original - Tic_original;

printf"Optimal value: 		%d ", l >CR_analysis.txt;
printf"				Required time:		%f \n", T_original  >CR_analysis.txt;
printf "-------------------------------CR ------------------------------\n">CR_analysis.txt;

let Tic_CR := _ampl_elapsed_time;

solve ContRelaxation;

let Toc_CR := _ampl_elapsed_time;
let CR := l_c; display l_c;
let T_CR := Toc_CR-Tic_CR;

printf"Optimal value: 		%f ", l_c >CR_analysis.txt;
printf"				Required time: 		%f \n",T_CR >CR_analysis.txt;
printf "\n" > CR_analysis.txt;

printf "********************************* Istance 3 *********************************\n">CR_analysis.txt;
reset data;
#model parameterDefinition.mod;
data demand3.dat;
data topology3.dat;


printf "---------------------------- Original ---------------------------\n">CR_analysis.txt;


let Tic_original := _ampl_elapsed_time;

solve Original;

let Toc_original := _ampl_elapsed_time;

let OPT:= l; display l;
let T_original := Toc_original - Tic_original;

printf"Optimal value: 		%d ", l >CR_analysis.txt;
printf"				Required time:		%f \n", T_original  >CR_analysis.txt;
printf "------------------------------- CR ------------------------------\n">CR_analysis.txt;

let Tic_CR := _ampl_elapsed_time;

solve ContRelaxation;

let Toc_CR := _ampl_elapsed_time;
let CR := l_c; display l_c;
let T_CR := Toc_CR-Tic_CR;

printf"Optimal value: 		%f ", l_c >CR_analysis.txt;
printf"				Required time: 		%f \n",T_CR >CR_analysis.txt;
printf "\n" > CR_analysis.txt;


printf "********************************* Istance 4 *********************************\n">CR_analysis.txt;
reset data;
#model parameterDefinition.mod;
data demand4.dat;
data topology4.dat;

printf "---------------------------- Original ---------------------------\n">CR_analysis.txt;


let Tic_original := _ampl_elapsed_time;

solve Original;

let Toc_original := _ampl_elapsed_time;

let OPT:= l; display l;
let T_original := Toc_original - Tic_original;

printf"Optimal value: 		%d ", l >CR_analysis.txt;
printf"				Required time:		%f \n", T_original  >CR_analysis.txt;
printf "------------------------------- CR ------------------------------\n">CR_analysis.txt;

let Tic_CR := _ampl_elapsed_time;

solve ContRelaxation;

let Toc_CR := _ampl_elapsed_time;
let CR := l_c; display l_c;
let T_CR := Toc_CR-Tic_CR;

printf"Optimal value: 		%f ", l_c >CR_analysis.txt;
printf"				Required time: 		%f \n",T_CR >CR_analysis.txt;
printf "\n" > CR_analysis.txt;

printf "********************************* Istance 5 *********************************\n">CR_analysis.txt;
reset data;
#model parameterDefinition.mod;
data demand5.dat;
data topology5.dat;


printf "---------------------------- Original ---------------------------\n">CR_analysis.txt;


let Tic_original := _ampl_elapsed_time;

solve Original;

let Toc_original := _ampl_elapsed_time;

let OPT:= l; display l;
let T_original := Toc_original - Tic_original;

printf"Optimal value: 		%d ", l >CR_analysis.txt;
printf"				Required time:		%f \n", T_original  >CR_analysis.txt;
printf "------------------------------- CR ------------------------------\n">CR_analysis.txt;

let Tic_CR := _ampl_elapsed_time;

solve ContRelaxation;

let Toc_CR := _ampl_elapsed_time;
let CR := l_c; display l_c;
let T_CR := Toc_CR-Tic_CR;

printf"Optimal value: 		%f ", l_c >CR_analysis.txt;
printf"				Required time: 		%f \n",T_CR >CR_analysis.txt;
printf "\n" > CR_analysis.txt;